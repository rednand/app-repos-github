{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport estilos from \"./estilos\";\nimport { pegarRepositoriosDoUsuario } from \"../../service/reqs/repositorios\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { buscaUsuario, deletaUsuario } from \"../../service/reqs/usuarios\";\nimport moment from \"moment/moment\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Repositorios(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    repo = _useState2[0],\n    setRepo = _useState2[1];\n  console.log(\"ðŸš€ ~ file: index.js:10 ~ Repositorios ~ repo:\", repo);\n  var estaNaTela = useIsFocused();\n  var carregarRepositorios = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var resultado = yield buscaUsuario();\n      setRepo(resultado);\n    });\n    return function carregarRepositorios() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    carregarRepositorios();\n  }, [estaNaTela]);\n  function somarValores(gastos) {\n    var totalGastos = gastos.reduce(function (total, gasto) {\n      return total + gasto.valor;\n    }, 0);\n    new Intl.NumberFormat('pt-BR', {\n      style: 'currency',\n      currency: 'BRL'\n    }).format(totalGastos);\n  }\n  var formatoReal = new Intl.NumberFormat('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n  });\n  var totalFormatado = formatoReal.format(totalGastos);\n  console.log(\"Total de gastos formatado:\", totalFormatado);\n  var totalGastos = somarValores(repo);\n  console.log(\"ðŸš€ ~ file: index.js:30 ~ Repositorios ~ totalGastos:\", totalGastos);\n  return _jsxs(View, {\n    style: estilos.container,\n    children: [_jsxs(Text, {\n      style: estilos.repositoriosTexto,\n      children: [repo.length, \" gastos inclu\\xEDdos\"]\n    }), _jsxs(Text, {\n      style: estilos.repositoriosTexto,\n      children: [\"Valor total: \", totalGastos]\n    }), _jsx(TouchableOpacity, {\n      style: estilos.botao,\n      onPress: function onPress() {\n        return navigation.navigate(\"Principal\");\n      },\n      children: _jsx(Text, {\n        style: estilos.textoBotao,\n        children: \"Adicionar nova d\\xEDvida\"\n      })\n    }), _jsx(FlatList, {\n      data: repo,\n      style: {\n        width: \"90%\"\n      },\n      keyExtractor: function keyExtractor(repo) {\n        return repo._id;\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsxs(View, {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            flexDirection: \"row\",\n            borderBottomColor: '#212121',\n            borderBottomWidth: 1\n          },\n          children: [_jsxs(View, {\n            style: {\n              marginBottom: 20,\n              marginTop: 20\n            },\n            children: [_jsxs(Text, {\n              style: estilos.repositorioNome,\n              children: [\"Data:\", _jsx(Text, {\n                style: estilos.repositorioDataValor,\n                children: moment(item.data).format(\"DD/MM/YYYY\")\n              })]\n            }), _jsxs(Text, {\n              style: estilos.repositorioData,\n              children: [\"Valor:\", _jsx(Text, {\n                style: estilos.repositorioDataValor,\n                children: item.valor\n              })]\n            }), _jsxs(Text, {\n              style: estilos.repositorioData,\n              children: [\"Gasto: \", _jsx(Text, {\n                style: estilos.repositorioDataValor,\n                children: item.local\n              })]\n            }), _jsxs(Text, {\n              style: estilos.repositorioData,\n              children: [\"Quem deve:\", _jsx(Text, {\n                style: estilos.repositorioDataValor,\n                children: item.nome\n              })]\n            })]\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return deletaUsuario(item._id).then(function () {\n                return carregarRepositorios();\n              });\n            },\n            children: _jsx(MaterialCommunityIcons, {\n              name: \"trash-can-outline\",\n              size: 24,\n              color: \"black\"\n            })\n          })]\n        });\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","Text","View","FlatList","TouchableOpacity","estilos","pegarRepositoriosDoUsuario","useIsFocused","buscaUsuario","deletaUsuario","moment","MaterialCommunityIcons","jsxs","_jsxs","jsx","_jsx","Repositorios","_ref","route","navigation","_useState","_useState2","_slicedToArray","repo","setRepo","console","log","estaNaTela","carregarRepositorios","_ref2","_asyncToGenerator","resultado","apply","arguments","somarValores","gastos","totalGastos","reduce","total","gasto","valor","Intl","NumberFormat","style","currency","format","formatoReal","totalFormatado","container","children","repositoriosTexto","length","botao","onPress","navigate","textoBotao","data","width","keyExtractor","_id","renderItem","_ref3","item","display","justifyContent","alignItems","flexDirection","borderBottomColor","borderBottomWidth","marginBottom","marginTop","repositorioNome","repositorioDataValor","repositorioData","local","nome","then","name","size","color"],"sources":["C:/projetos/app-repos-github/src/paginas/Repositorios/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Text, View, FlatList, TouchableOpacity } from \"react-native\";\r\nimport estilos from \"./estilos\";\r\nimport { pegarRepositoriosDoUsuario } from \"../../service/reqs/repositorios\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { buscaUsuario, deletaUsuario } from \"../../service/reqs/usuarios\";\r\nimport moment from \"moment/moment\";\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\nexport default function Repositorios({ route, navigation }) {\r\n  const [repo, setRepo] = useState([]);\r\n  console.log(\"ðŸš€ ~ file: index.js:10 ~ Repositorios ~ repo:\", repo)\r\n  const estaNaTela = useIsFocused();\r\n\r\n  const carregarRepositorios = async () => {\r\n    const resultado = await buscaUsuario();\r\n    setRepo(resultado);\r\n  };\r\n\r\n  useEffect(() => {\r\n    carregarRepositorios();\r\n  }, [estaNaTela]);\r\n\r\n\r\n  function somarValores(gastos) {\r\n\r\n    const totalGastos = gastos.reduce((total, gasto) => total + gasto.valor, 0)\r\n    new Intl.NumberFormat('pt-BR', {\r\n      style: 'currency',\r\n      currency: 'BRL',\r\n    }).format(totalGastos);\r\n  }\r\n\r\n  const formatoReal = new Intl.NumberFormat('pt-BR', {\r\n    style: 'currency',\r\n    currency: 'BRL',\r\n  });\r\n  \r\n  const totalFormatado = formatoReal.format(totalGastos);\r\n  console.log(\"Total de gastos formatado:\", totalFormatado);\r\n\r\n  const totalGastos = somarValores(repo);\r\n  console.log(\"ðŸš€ ~ file: index.js:30 ~ Repositorios ~ totalGastos:\", totalGastos)\r\n\r\n  return (\r\n    <View style={estilos.container}>\r\n      <Text style={estilos.repositoriosTexto}>\r\n        {repo.length} gastos incluÃ­dos\r\n      </Text>\r\n      <Text style={estilos.repositoriosTexto}>\r\n        Valor total: {totalGastos}\r\n      </Text>\r\n      <TouchableOpacity\r\n        style={estilos.botao}\r\n        onPress={() =>\r\n          navigation.navigate(\"Principal\")\r\n        }\r\n      >\r\n        <Text style={estilos.textoBotao}>Adicionar nova dÃ­vida</Text>\r\n      </TouchableOpacity>\r\n\r\n      <FlatList\r\n        data={repo}\r\n        style={{ width: \"90%\" }}\r\n        keyExtractor={(repo) => repo._id}\r\n        renderItem={({ item }) => (\r\n          <View style={{\r\n            display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", flexDirection: \"row\", borderBottomColor: '#212121',\r\n            borderBottomWidth: 1,\r\n          }}>\r\n            <View style={{\r\n              marginBottom: 20,\r\n              marginTop: 20,\r\n            }}>\r\n              <Text\r\n                style={estilos.repositorioNome}\r\n\r\n              >\r\n                Data:\r\n                <Text style={estilos.repositorioDataValor}>\r\n                  {moment(item.data).format(\"DD/MM/YYYY\")}\r\n                </Text>\r\n              </Text>\r\n              <Text style={estilos.repositorioData}>\r\n                Valor:\r\n                <Text style={estilos.repositorioDataValor}>\r\n                  {item.valor}\r\n                </Text>\r\n              </Text>\r\n              <Text style={estilos.repositorioData}>\r\n                Gasto: <Text style={estilos.repositorioDataValor}>\r\n                  {item.local}\r\n                </Text>\r\n              </Text>\r\n              <Text style={estilos.repositorioData}>\r\n                Quem deve:\r\n                <Text style={estilos.repositorioDataValor}>\r\n                  {item.nome}\r\n                </Text>\r\n              </Text>\r\n            </View>\r\n            <TouchableOpacity\r\n              onPress={() => deletaUsuario(item._id).then(() => carregarRepositorios())}>\r\n              <MaterialCommunityIcons name=\"trash-can-outline\" size={24} color=\"black\" />\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}